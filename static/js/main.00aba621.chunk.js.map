{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","subjectId","name","username","professionalHeadline","locationName","picture","amount","currency","periodicity","professionalTitle","length","slice","picturelink","rate","className","id","src","alt","href","target","rel","CardList","people","map","user","i","compensations","key","employee","freelancer","intern","SearchBox","searchfield","searchChange","keyPress","type","placeholder","onChange","onKeyDown","Scroll","props","style","overflow","border","height","children","App","onSearchChange","e","value","trim","setState","term","verifyText","onkeyPress","keyCode","state","response","fetch","method","then","json","responseData","results","myArg","this","headers","body","JSON","stringify","filteredPeople","filter","person","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00aba621.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({ subjectId, \r\n                name,\r\n                username, \r\n                professionalHeadline, \r\n                locationName, \r\n                picture, \r\n                amount, \r\n                currency, \r\n                periodicity}) => {\r\n\r\n    let professionalTitle =  professionalHeadline.length > 40 ? professionalHeadline.slice(0, 37) + '...' : professionalHeadline;\r\n    let picturelink = picture == null ? 'https://voxpopulii.in/system/static/dashboard/img/default_user.png' : picture;\r\n    let rate = amount === '' ? 'Private' : amount + currency + ' ' + periodicity;                \r\nreturn(\r\n    <div className='bg-dark-gray dib br3 pa2 ma2 grow bw2 shadow-5' id={`${subjectId}`}>\r\n        <div className=''>\r\n            <div className=''>\r\n                <img className=\"br-100 pa1 ba b--black-10 h3 w3\" src={`${picturelink}`} alt='foto'/>\r\n            </div>\r\n            <div>               \r\n                <a href={`https://bio.torre.co/${username}`} target='_blank' rel=\"noopener noreferrer\"><h2>{name}</h2></a>\r\n                <h3>{professionalTitle}</h3>\r\n                <p>{locationName}</p>\r\n                <h3 className='rate'>Rate: {rate}</h3>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n)\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({people}) => {\r\n\r\n    if (people.length===0){\r\n        return(<div className='tc'>\r\n            <h3>No results.</h3>\r\n            </div>)\r\n    }\r\n\r\n    return(\r\n      <div>\r\n          {\r\n            people.map((user, i) => {\r\n\r\n                let amount = '';\r\n                let currency = '';\r\n                let periodicity = '';\r\n                if (people[i].compensations==null){\r\n                    return(\r\n                        <Card \r\n                            key={i}\r\n                            subjectId={people[i].subjectId}\r\n                            name={people[i].name}\r\n                            username={people[i].username}\r\n                            professionalHeadline={people[i].professionalHeadline}\r\n                            locationName={people[i].locationName}\r\n                            picture={people[i].picture}\r\n                            amount=''\r\n                            currency=''\r\n                            periodicity=''\r\n                        />\r\n                    )\r\n                } \r\n                if (people[i].compensations.employee==null){\r\n                    if (people[i].compensations.freelancer==null){\r\n                        if (people[i].compensations.intern!=null){\r\n                        \r\n                            amount = people[i].compensations.intern.amount == null ? '' : people[i].compensations.intern.amount;\r\n                            currency = people[i].compensations.intern.currency == null ? '' : people[i].compensations.intern.currency;\r\n                            periodicity = people[i].compensations.intern.periodicity == null ? '' : people[i].compensations.intern.periodicity;    \r\n                            return(\r\n                            <Card \r\n                            key={i}\r\n                            subjectId={people[i].subjectId}\r\n                            name={people[i].name}\r\n                            username={people[i].username}\r\n                            professionalHeadline={people[i].professionalHeadline}\r\n                            locationName={people[i].locationName}\r\n                            picture={people[i].picture}\r\n                            amount={amount}\r\n                            currency={currency}\r\n                            periodicity={periodicity}\r\n                            />\r\n                            )\r\n                        }\r\n                    }else {\r\n                        amount = people[i].compensations.freelancer.amount == null ? '' : people[i].compensations.freelancer.amount;\r\n                        currency = people[i].compensations.freelancer.currency == null ? '' : people[i].compensations.freelancer.currency;\r\n                        periodicity = people[i].compensations.freelancer.periodicity == null ? '' : people[i].compensations.freelancer.periodicity;\r\n                        return(\r\n                        <Card \r\n                        key={i}\r\n                        subjectId={people[i].subjectId}\r\n                        name={people[i].name}\r\n                        username={people[i].username}\r\n                        professionalHeadline={people[i].professionalHeadline}\r\n                        locationName={people[i].locationName}\r\n                        picture={people[i].picture}\r\n                        amount={amount}\r\n                        currency={currency}\r\n                        periodicity={periodicity}\r\n                        />\r\n                        )\r\n                    }\r\n\r\n                }else {\r\n                    amount = people[i].compensations.employee.amount == null ? '' : people[i].compensations.employee.amount;\r\n                    currency = people[i].compensations.employee.currency == null ? '' : people[i].compensations.employee.currency;\r\n                    periodicity = people[i].compensations.employee.periodicity == null ? '' : people[i].compensations.employee.periodicity;\r\n                    return(\r\n                    <Card \r\n                        key={i}\r\n                        subjectId={people[i].subjectId}\r\n                        name={people[i].name}\r\n                        username={people[i].username}\r\n                        professionalHeadline={people[i].professionalHeadline}\r\n                        locationName={people[i].locationName}\r\n                        picture={people[i].picture}\r\n                        amount={amount}\r\n                        currency={currency}\r\n                        periodicity={periodicity}\r\n                    />\r\n                    )\r\n                }  \r\n\r\n                 return(\r\n                        <Card \r\n                            key={i}\r\n                            subjectId={people[i].subjectId}\r\n                            name={people[i].name}\r\n                            username={people[i].username}\r\n                            professionalHeadline={people[i].professionalHeadline}\r\n                            locationName={people[i].locationName}\r\n                            picture={people[i].picture}\r\n                            amount=''\r\n                            currency=''\r\n                            periodicity=''\r\n                        />\r\n                    )      \r\n            })\r\n          };\r\n      </div>      \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange, keyPress}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--gray bg-black'\r\n                type='search'\r\n                placeholder='search people'\r\n                onChange={searchChange}\r\n                onKeyDown={keyPress}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        people: [],\r\n        searchfield: '',\r\n        response: false\r\n      }\r\n      this.name = {term:''}\r\n    }\r\n    \r\n    componentDidMount() {\r\n      fetch('https://search.torre.co/people/_search/?currency=USD%24&page=0&periodicity=hourly&aggregate=true&offset=0&size=20', {\r\n          method: 'POST' \r\n        })\r\n        .then(response=> response.json())\r\n        .then(responseData => {\r\n            this.setState({ people: responseData.results, \r\n                            response: true})\r\n    });\r\n    }\r\n\r\n\r\n    verifyText(myArg) {\r\n        this.setState({response:false});\r\n        if (myArg.term===''){\r\n            fetch('https://search.torre.co/people/_search/?currency=USD%24&page=0&periodicity=hourly&aggregate=true&offset=0&size=20', {\r\n            method: 'POST' \r\n            })\r\n            .then(response=> response.json())\r\n            .then(responseData => {\r\n                this.setState({ people: responseData.results,\r\n                    response: true})\r\n            });\r\n        }else {\r\n            fetch('https://search.torre.co/people/_search/?currency=USD%24&page=0&periodicity=hourly&aggregate=true&offset=0&size=20', {\r\n            method: 'POST',\r\n            headers:{\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              name:  myArg\r\n            })\r\n          \r\n          })\r\n          .then(response=> response.json())\r\n          .then(responseData => {\r\n              this.setState({ people: responseData.results,\r\n                response: true})\r\n            });\r\n        }\r\n        \r\n        }\r\n  \r\n    onSearchChange = (e) => {\r\n        if (e.target.value.trim==='') {\r\n          this.setState({ searchfield: e.target.value })\r\n          this.name.term = e.target.value;\r\n          this.verifyText(this.name);\r\n        }    \r\n    }\r\n\r\n    onkeyPress = (e) => {\r\n        if(e.keyCode === 13){\r\n           this.setState({ searchfield: e.target.value })\r\n           this.name.term = e.target.value;\r\n           this.verifyText(this.name);\r\n        }\r\n     }\r\n  \r\n    render() {\r\n      const { people, searchfield } = this.state;\r\n      const filteredPeople = people.filter(person =>{\r\n        return person.name.toLowerCase().includes(searchfield.toLowerCase());\r\n      })\r\n      return(\r\n          <div className='tc'>\r\n            <h1 className='f1'>Find People in Torre</h1>\r\n            <SearchBox searchChange={this.onSearchChange} keyPress={this.onkeyPress}/>\r\n            <Scroll>\r\n              <CardList people={filteredPeople}/>\r\n            </Scroll>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n                  <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}